.PHONY: dev dev-d dev-watch prod build build-dev clean clean-all logs logs-all shell db-shell redis-shell migrate test lint format typecheck help
.PHONY: create-migration migration-history migration-current reset-db backup-db restore-db
.PHONY: test-unit test-integration test-cov test-fast test-auth test-crud test-api install-deps update-deps

# =============================================================================
# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# =============================================================================

dev:
	docker compose -f docker-compose.dev.yml up --build

dev-d:
	docker compose -f docker-compose.dev.yml up --build -d

dev-watch:
	docker compose -f docker-compose.dev.yml watch

prod:
	docker compose up --build -d

# –ó–∞–ø—É—Å–∫ –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏
up:
	docker compose -f docker-compose.dev.yml up

down:
	docker compose -f docker-compose.dev.yml down

restart:
	docker compose -f docker-compose.dev.yml restart

# =============================================================================
# –°–±–æ—Ä–∫–∞
# =============================================================================

build:
	docker compose -f docker-compose.dev.yml build

build-dev:
	docker compose -f docker-compose.dev.yml build --no-cache

build-prod:
	docker compose build

# =============================================================================
# –û—á–∏—Å—Ç–∫–∞
# =============================================================================

clean:
	docker compose -f docker-compose.dev.yml down -v
	docker compose down -v
	docker system prune -f

clean-all:
	docker compose -f docker-compose.dev.yml down -v --rmi all
	docker compose down -v --rmi all
	docker system prune -af
	docker volume prune -f

clean-volumes:
	docker compose -f docker-compose.dev.yml down -v
	docker volume prune -f

# =============================================================================
# –õ–æ–≥–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
# =============================================================================

logs:
	docker compose -f docker-compose.dev.yml logs -f web

logs-all:
	docker compose -f docker-compose.dev.yml logs -f

logs-db:
	docker compose -f docker-compose.dev.yml logs -f db

logs-redis:
	docker compose -f docker-compose.dev.yml logs -f redis

status:
	docker compose -f docker-compose.dev.yml ps

# =============================================================================
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º
# =============================================================================

shell:
	docker compose -f docker-compose.dev.yml exec web bash

db-shell:
	docker compose -f docker-compose.dev.yml exec db psql -U gemup_user -d gemup_marketplace

redis-shell:
	docker compose -f docker-compose.dev.yml exec redis redis-cli

# =============================================================================
# –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# =============================================================================

migrate:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/alembic upgrade head

create-migration:
	@if [ -z "$(msg)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: make create-migration msg='–æ–ø–∏—Å–∞–Ω–∏–µ'"; \
		exit 1; \
	fi
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/alembic revision --autogenerate -m "$(msg)"

migration-history:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/alembic history

migration-current:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/alembic current

downgrade:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/alembic downgrade -1

# –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–û–°–¢–û–†–û–ñ–ù–û!)
reset-db:
	@echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ!"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " confirm && [ "$$confirm" = "y" ]
	docker compose -f docker-compose.dev.yml down -v
	docker volume rm $$(docker volume ls -q | grep postgres) 2>/dev/null || true
	docker compose -f docker-compose.dev.yml up -d db
	sleep 10
	docker compose -f docker-compose.dev.yml up -d web

# =============================================================================
# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
# =============================================================================

backup-db:
	@mkdir -p ./backups
	docker compose -f docker-compose.dev.yml exec db pg_dump -U gemup_user gemup_marketplace > ./backups/backup_$$(date +%Y%m%d_%H%M%S).sql
	@echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ ./backups/"

restore-db:
	@if [ -z "$(file)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞: make restore-db file=./backups/backup_20240101_120000.sql"; \
		exit 1; \
	fi
	@if [ ! -f "$(file)" ]; then \
		echo "‚ùå –§–∞–π–ª $(file) –Ω–µ –Ω–∞–π–¥–µ–Ω"; \
		exit 1; \
	fi
	docker compose -f docker-compose.dev.yml exec -T db psql -U gemup_user -d gemup_marketplace < $(file)
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ $(file)"

# =============================================================================
# –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
# =============================================================================

lint:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/ruff check .

lint-fix:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/ruff check . --fix

format:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/ruff format .

typecheck:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/mypy app/

security:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/bandit -r app/

check-all: lint typecheck security
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã"

# =============================================================================
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# =============================================================================

test:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest

test-unit:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest tests/unit/ -v

test-integration:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest tests/integration/ -v

test-cov:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest --cov=app --cov-report=html --cov-report=term

test-fast:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest -m "not slow" -x

test-auth:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest -m auth -v

test-crud:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest -m crud -v

test-api:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest -m api -v

test-watch:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest-watch

test-debug:
	docker compose -f docker-compose.dev.yml exec web /app/.venv/bin/pytest -v -s --pdb

# =============================================================================
# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
# =============================================================================

install-deps:
	docker compose -f docker-compose.dev.yml exec web uv sync

update-deps:
	docker compose -f docker-compose.dev.yml exec web uv lock --upgrade

export-requirements:
	docker compose -f docker-compose.dev.yml exec web uv export --format requirements-txt --output-file requirements.txt

# =============================================================================
# –£—Ç–∏–ª–∏—Ç—ã
# =============================================================================

docs:
	@echo "üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º Swagger UI..."
	@command -v open >/dev/null 2>&1 && open http://localhost:8000/docs || echo "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/docs –≤ –±—Ä–∞—É–∑–µ—Ä–µ"

redoc:
	@echo "üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º ReDoc..."
	@command -v open >/dev/null 2>&1 && open http://localhost:8000/redoc || echo "–û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/redoc –≤ –±—Ä–∞—É–∑–µ—Ä–µ"

health:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@curl -s http://localhost:8000/health | python -m json.tool || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"