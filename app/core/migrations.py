import asyncioimport loggingfrom alembic.config import Configfrom alembic import commandfrom app.core.config import settingslogger = logging.getLogger(__name__)async def run_migrations():    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π Alembic –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ"""    try:        logger.info("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Alembic        alembic_cfg = Config("alembic.ini")        alembic_cfg.set_main_option("sqlalchemy.url", settings.database_url)        # –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å async        await asyncio.to_thread(command.upgrade, alembic_cfg, "head")        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")    except Exception as e:        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")        # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑-–∑–∞ –º–∏–≥—Ä–∞—Ü–∏–π        logger.warning("‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫ –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π")async def init_alembic():    """–ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"""    try:        await run_migrations()    except Exception as e:        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Alembic: {e}")        logger.warning("‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫ –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π")