from typing import List, Optionalfrom sqlalchemy import selectfrom sqlalchemy.ext.asyncio import AsyncSessionfrom app.crud.base import CRUDBasefrom app.models.models import Orderfrom app.schemas.order import OrderCreate, OrderUpdateclass CRUDOrder(CRUDBase[Order, OrderCreate, OrderUpdate]):    async def get_user_orders(            self,            db: AsyncSession,            *,            user_id: int,            skip: int = 0,            limit: int = 100    ) -> List[Order]:        """Получение заказов пользователя"""        result = await db.execute(            select(Order)            .where(Order.user_id == user_id)            .order_by(Order.created_at.desc())            .offset(skip)            .limit(limit)        )        return list(result.scalars().all())    async def get_by_order_number(            self,            db: AsyncSession,            *,            order_number: str    ) -> Optional[Order]:        """Получение заказа по номеру"""        result = await db.execute(            select(Order).where(Order.order_number == order_number)        )        return result.scalar_one_or_none()order_crud = CRUDOrder(Order)