from pydantic import BaseModel, Field, ConfigDictfrom typing import Optional, Listfrom datetime import datetimefrom decimal import Decimalfrom app.schemas.proxy_product import ProxyProductPublicclass ShoppingCartBase(BaseModel):    proxy_product_id: int    quantity: int = Field(..., ge=1, le=1000)    generation_params: Optional[str] = Noneclass ShoppingCartCreate(ShoppingCartBase):    passclass ShoppingCartUpdate(BaseModel):    quantity: Optional[int] = Field(None, ge=1, le=1000)    generation_params: Optional[str] = Noneclass ShoppingCartItemResponse(BaseModel):    model_config = ConfigDict(from_attributes=True)    id: int    proxy_product_id: int    quantity: int    generation_params: Optional[str]    created_at: datetime    updated_at: datetime    expires_at: Optional[datetime]    proxy_product: Optional[ProxyProductPublic] = Noneclass ShoppingCartResponse(BaseModel):    items: List[ShoppingCartItemResponse]    total_items: int    total_amount: Decimal    currency: str = "USD"class AddToCartRequest(BaseModel):    proxy_product_id: int    quantity: int = Field(default=1, ge=1, le=1000)    generation_params: Optional[str] = Noneclass UpdateCartItemRequest(BaseModel):    quantity: int = Field(..., ge=1, le=1000)    generation_params: Optional[str] = None