from pydantic import BaseModel, Field, ConfigDictfrom typing import Optionalfrom datetime import datetimefrom decimal import Decimalfrom app.models.models import TransactionType, TransactionStatusfrom app.schemas.user import UserPublicfrom app.schemas.order import OrderPublicclass TransactionBase(BaseModel):    amount: Decimal = Field(..., description="Сумма транзакции")    currency: str = Field(default="USD", max_length=10)    transaction_type: TransactionType    description: Optional[str] = Field(None, max_length=500)class TransactionCreate(TransactionBase):    user_id: int    order_id: Optional[int] = None    payment_provider: str = Field(default="cryptomus", max_length=50)    provider_metadata: Optional[str] = Noneclass TransactionUpdate(BaseModel):    status: Optional[TransactionStatus] = None    external_transaction_id: Optional[str] = None    payment_url: Optional[str] = None    provider_metadata: Optional[str] = Noneclass TransactionResponse(TransactionBase):    model_config = ConfigDict(from_attributes=True)    id: int    transaction_id: str    user_id: int    order_id: Optional[int]    status: TransactionStatus    payment_provider: str    external_transaction_id: Optional[str]    payment_url: Optional[str]    provider_metadata: Optional[str]    created_at: datetime    updated_at: datetime    completed_at: Optional[datetime]    user: Optional[UserPublic] = None    order: Optional[OrderPublic] = Noneclass TransactionPublic(BaseModel):    model_config = ConfigDict(from_attributes=True)    transaction_id: str    amount: Decimal    currency: str    transaction_type: TransactionType    status: TransactionStatus    description: Optional[str]    created_at: datetime    completed_at: Optional[datetime]class PaymentRequest(BaseModel):    order_id: int    payment_method: str = "crypto"    return_url: Optional[str] = None    webhook_url: Optional[str] = Noneclass PaymentResponse(BaseModel):    transaction_id: str    payment_url: str    amount: Decimal    currency: str    expires_at: datetime